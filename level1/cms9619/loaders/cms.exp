#! /usr/bin/expect

# This script loads the drivewire bootloader into memory
# using the DEBUG19 debugger.
# Make sure you have a drivewire server running
# and connected to the other serial port.
# Then it sets the date for your convenience.

proc send_echo { output } {
	set outlist [split $output {}]
	expect -timeout 1 timeout
	foreach c $outlist {
                if {[string is control $c]} {
                        set c "\r"
                        #send c
                        #break
                }
		send -s $c
                after 1
		expect -timeout 2 $c
		after 3
                if {[string is control $c]} {
			after 20
		}
	}
	send "\r"
}

proc send_v09 { output } {
	send "\032"
	expect "\>"
	send $output
	send "\r"
	expect -timeout 1 timeout
}

proc dump {i} {
	send_v09 Mdump[exp_pid]$i.bin
}

if {$argc eq 0} {
        puts "Enter a path to the serial device as an argument."
        exit 1
}

if [file exist [lindex $argv 0]] {
        set serial_dev [lindex $argv 0]
} else {
        puts "\n[lindex $argv 0] is not a valid device\n"
        exit 1
}

set dumpcnt 1
set zmodem cms_zm_loader.dbge
set drivewire loaders/cms_dw_loader.dbge

set send_slow {1 .1}

#spawn screen /dev/cu.usbserial-AL05IZIQ 9600N1,ctsrts
spawn screen $serial_dev 19200N1,crtscts
#spawn screen ./v09 -e 0x1a
#-t trace.txt -tl 0x0000 -th 0xe000

sleep 1
send -s "C\r"

expect : {
        send "C 0400 9EFF\r"
}

expect : {
        send "C A000 DFFF\r"
}
        
expect ":" {
        send_echo [exec cat $drivewire]
}

set timeout 120
expect "Time ?" {
        send_echo [exec date "+%Y/%m/%d %T"]
}

interact
#set the clock using zmodem
#expect ":"
#send -s "J 900C\r"

#expect -- "-E"
#send " -C -U\r"
#expect {
#        -- "-E"     {send " -C -U\r" ; exp_continue}
#        ":"         {send_echo "J 9014\r"}
#        timeout
#}

#run the bootloader
#expect ":"
#send_echo "J 9014\r"

#expect {
#    "!!!*.dsk"  {send -s "\r" ; exp_continue}
#    #NITROS9 { dump $dumpcnt ; incr dumpcnt ; exp_continue }
#    timeout     interact
#    # {dump $dumpcnt ; send_v09 X }
#    "\r\n:O"    {send -s "\r" ; exp_continue}
#    "\r\n:$"    {send_echo "J 2602\r" ; exp_continue}
#    OS9: interact
#}

close
exit
